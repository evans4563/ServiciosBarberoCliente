@model ServiciosBarberoCliente.Models.Solicitud

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center my-4">Crear Solicitud</h1>

<div class="container p-4" style="border-radius: 10px; background-color: dimgray;">
    <div class="row">
        <!-- Columna izquierda para el mapa -->
        <div class="col-md-6">
            <h4 class="text-center mb-4 text-white">Ubicación en el Mapa</h4>
            <div id="map" style="height: 575px; width: 100%; border-radius: 10px;"></div>
        </div>
        <!-- Columna derecha para el formulario -->
        <div class="col-md-6">
            <h4 class="text-center mb-4 text-white">Datos de la Solicitud</h4>
            <div style="background-color: white; padding: 20px; border-radius: 10px;">
                <form id="solicitud-form" asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                           <label asp-for="IdBarbero" class="control-label"></label>
                         <select asp-for="IdBarbero" class ="form-control" asp-items="ViewBag.IdBarbero"></select>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Dirección" class="form-label"></label>
                        <input asp-for="Dirección" id="direccion-input" class="form-control" placeholder="Ingrese la Ubicación" />
                        <span asp-validation-for="Dirección" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Fecha" class="control-label"></label>
                        <input asp-for="Fecha" class="form-control" />
                        <span asp-validation-for="Fecha" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Descripcion" class="form-label"></label>
                        <input asp-for="Descripcion" class="form-control" placeholder="Descripción del servicio" style="height: 80px;" />
                        <span asp-validation-for="Descripcion" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Precio" class="form-label"></label>
                        <input asp-for="Precio" type="number" class="form-control" placeholder="Precio" />
                        <span asp-validation-for="Precio" class="text-danger"></span>
                    </div>

                    <div class="text-center">
                        <input type="submit" id="submit-btn" value="Crear Solicitud" class="btn btn-prima" style="background-color: black; color: white;" />
                    </div>
                </form>
                <div id="alert" style="display: none;"></div>

            </div>
        </div>
    </div>
</div>

<style>#alert {
  border-radius: 5px;
  padding: 10px;
  margin-top: 10px;
  text-align: center;
}

#alert.success {
  background-color: #d4edda; /* Verde claro */
  color: #155724; /* Verde oscuro */
  border: 1px solid #c3e6cb; /* Verde claro */
}

#alert.error {
  background-color: #f8d7da; /* Rojo claro */
  color: #721c24; /* Rojo oscuro */
  border: 1px solid #f5c6cb; /* Rojo claro */
}

</style>
@section Scripts {
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDk_6YpNpeASBHg_kW6F92G_6YoMacuMH8&libraries=places&callback=initMap"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script type="text/javascript">
        let map;
        let geocoder;
        let autocomplete;
        let marker;

        function initMap() {
            const medellin = { lat: 6.2442, lng: -75.5812 };

            // Inicializa el mapa centrado en Medellín
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 12,
                center: medellin,
            });

            geocoder = new google.maps.Geocoder();

            const direccionInput = document.getElementById("direccion-input");
            autocomplete = new google.maps.places.Autocomplete(direccionInput);

            // Manejo del autocompletado en el campo de dirección
            autocomplete.addListener('place_changed', function () {
                let place = autocomplete.getPlace();
                if (place.geometry) {
                    setMapMarker(place.geometry.location);
                    map.setCenter(place.geometry.location);
                }
            });

            // Evento de clic en el mapa para obtener la dirección
            map.addListener('click', function (event) {
                const latLng = event.latLng;
                geocodeLatLng(latLng);
            });
        }

        // Coloca un marcador en el mapa
        function setMapMarker(location) {
            if (marker) {
                marker.setPosition(location);
            } else {
                marker = new google.maps.Marker({
                    position: location,
                    map: map
                });
            }
        }

        // Realiza la geocodificación inversa al hacer clic en el mapa
        function geocodeLatLng(latLng) {
            geocoder.geocode({ location: latLng }, function (results, status) {
                if (status === "OK") {
                    if (results[0]) {
                        // Coloca la dirección en el input
                        document.getElementById('direccion-input').value = results[0].formatted_address;
                        // Coloca un marcador en el mapa
                        setMapMarker(latLng);
                        map.setCenter(latLng);
                    } else {
                        alert("No se encontraron resultados.");
                    }
                } else {
                    alert("Geocoder falló debido a: " + status);
                }
            });
        }

        // Manejo del envío del formulario
        document.getElementById('solicitud-form').addEventListener('submit', function (event) {
            event.preventDefault(); // Previene el envío del formulario para demostración

            // Obtiene los valores de los campos
            const direccion = document.getElementById('direccion-input').value;
            const fecha = document.querySelector('input[name="Fecha"]').value;
            const descripcion = document.querySelector('input[name="Descripcion"]').value;
            const precio = document.querySelector('input[name="Precio"]').value;

            // Verifica si algún campo está vacío
            let missingFields = [];
            if (!direccion) missingFields.push("Dirección");
            if (!fecha) missingFields.push("Fecha");
            if (!descripcion) missingFields.push("Descripción");
            if (!precio) missingFields.push("Precio");

            // Muestra la alerta correspondiente
            const alertDiv = document.getElementById('alert');
            if (missingFields.length > 0) {
                alertDiv.className = 'error';
                alertDiv.textContent = `ERROR. Falta Llenar Campo(s): ${missingFields.join(", ")} para solicitar un servicio`;
                alertDiv.style.display = 'block';
            } else {
                alertDiv.className = 'success';
                alertDiv.textContent = 'Su solicitud fue Enviada CORRECTAMENTE';
                alertDiv.style.display = 'block';

                // Opcional: oculta la alerta después de unos segundos
                setTimeout(function () {
                    alertDiv.style.display = 'none';
                }, 5000); // 5000 milisegundos = 5 segundos

                // Opcional: Simular el envío del formulario
                setTimeout(function () {
                    document.getElementById('solicitud-form').submit(); // Envío real del formulario
                }, 2000); // 2000 milisegundos = 2 segundos para simular un retraso
            }
        });
    </script>
}
